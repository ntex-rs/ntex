name: CI (Linux)

on: [push, pull_request]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1.56.0 # MSRV
          - stable
          - nightly

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.version }}-x86_64-unknown-linux-gnu-cargo-registry-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.version }}-x86_64-unknown-linux-gnu-cargo-index-trimmed-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo tarpaulin
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ matrix.version }}-x86_64-unknown-linux-gnu-tarpaulin

      - name: Run tests
        uses: actions-rs/cargo@v1
        timeout-minutes: 40
        with:
          command: test
          args: --all --all-features --no-fail-fast -- --nocapture

      - name: Run async-std tests
        timeout-minutes: 40
        continue-on-error: true
        run: |
          cd ntex
          cargo test --no-default-features --no-fail-fast --features="async-std,cookie,url,compress,openssl,rustls" --lib -- --test-threads 1

      - name: Run glommio tests
        timeout-minutes: 40
        run: |
          cd ntex
          sudo -E env PATH="$PATH" bash -c "ulimit -l 512 && ulimit -a && cargo test --no-default-features --no-fail-fast --features=\"glommio,cookie,url,compress,openssl,rustls\""

      - name: Install tarpaulin
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cargo install cargo-tarpaulin

      - name: Generate coverage report
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cargo tarpaulin --out Xml --all --all-features

      - name: Generate coverage report (async-std)
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cd ntex
          cargo tarpaulin --out Xml --output-dir=.. --no-default-features --features="async-std,cookie,url,compress,openssl,rustls" --lib

      - name: Generate coverage report (glommio)
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        run: |
          cd ntex
          sudo -E env PATH="$PATH" bash -c "ulimit -l 512 && ulimit -a && cargo tarpaulin --out Xml --no-default-features --features=\"glommio,cookie,url,compress,openssl,rustls\" --lib"

      - name: Upload to Codecov
        if: matrix.version == '1.56.0' && (github.ref == 'refs/heads/master' || github.event_name == 'pull_request')
        continue-on-error: true
        uses: codecov/codecov-action@v2
        with:
          files: cobertura.xml, ./ntex/cobertura.xml
          verbose: true

      - name: Install cargo-cache
        continue-on-error: true
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean

      - name: Clear the cargo caches
        run: |
          cargo-cache
