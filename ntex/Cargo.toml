[package]
name = "ntex"
version = "2.15.1"
authors = ["ntex contributors <team@ntex.rs>"]
description = "Framework for composable network services"
readme = "README.md"
keywords = ["ntex", "networking", "framework", "async", "futures"]
repository = "https://github.com/ntex-rs/ntex"
documentation = "https://docs.rs/ntex/"
categories = [
    "network-programming",
    "asynchronous",
    "web-programming::http-server",
    "web-programming::websocket",
]
license = "MIT OR Apache-2.0"
edition = "2021"
rust-version = "1.75"

[package.metadata.docs.rs]
toolchain = "nightly"
features = ["tokio", "openssl", "rustls", "compress", "cookie", "ws", "ntex-tls/rustls-ring"]
rustc-args = ["--cfg", "docsrs_dep"]
rustdoc-args = ["--cfg", "docsrs_dep"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(docsrs_dep)'] }

[lib]
name = "ntex"
path = "src/lib.rs"

[features]
default = ["ws"]

# openssl
openssl = ["tls-openssl", "ntex-tls/openssl"]

# rustls support
rustls = ["tls-rustls", "webpki-roots", "ntex-tls/rustls"]

# enable compressison support
compress = ["flate2"]

# enable cookie support
cookie = ["coo-kie", "coo-kie/percent-encode"]

# url support
url = ["url-pkg"]

# tokio runtime
tokio = ["ntex-net/tokio"]

# compio runtime
compio = ["ntex-net/compio"]

# neon runtime
neon = ["ntex-net/neon"]

# neon runtime
neon-uring = ["ntex-net/neon", "ntex-net/io-uring"]

# websocket support
ws = ["dep:sha1"]

# disable [ntex::test] logging configuration
no-test-logging = []

[dependencies]
ntex-codec = "0.6"
ntex-http = "0.1.14"
ntex-router = "0.5"
ntex-service = "3.5"
ntex-macros = "0.1"
ntex-util = "2.13"
ntex-bytes = "0.1.30"
ntex-server = "2.8.1"
ntex-h2 = "1.12.0"
ntex-rt = "0.4.32"
ntex-io = "2.14.0"
ntex-net = "2.7.0"
ntex-tls = "2.3"

base64 = { workspace = true }
bitflags = { workspace = true }
log = { workspace = true }
pin-project-lite = { workspace = true }
regex = { workspace = true }
serde = { workspace = true }
sha1 = { workspace = true, optional = true }
env_logger = { workspace = true }
thiserror = { workspace = true }
nanorand = { workspace = true }
variadics_please = { workspace = true }

# http/web framework
httparse = "1.9"
httpdate = "1.0"
encoding_rs = "0.8"
mime = "0.3"
percent-encoding = "2.3"
serde_json = "1"
serde_urlencoded = "0.7"
url-pkg = { version = "2.5", package = "url", optional = true }
coo-kie = { version = "0.18", package = "cookie", optional = true }

# openssl
tls-openssl = { version = "0.10", package = "openssl", optional = true }

# rustls
tls-rustls = { version = "0.23", package = "rustls", optional = true, default-features = false }
webpki-roots = { workspace = true, optional = true }

# compression
flate2 = { version = "1.0", optional = true }

[dev-dependencies]
rand = { workspace = true }
time = { workspace = true }
oneshot = { workspace = true }
futures-util = { workspace = true }
tls-openssl = { version = "0.10", package = "openssl" }
tls-rustls = { version = "0.23", package = "rustls", features = ["ring", "std"], default-features = false }
rustls-pemfile = { workspace = true }
webpki-roots = { workspace = true }
